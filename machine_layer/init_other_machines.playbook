---
# 다른 머신들 초기화 플레이북
# 네트워크 스캔을 통해 새로운 머신을 발견하고 클러스터에 추가합니다

- name: "Initialize Other Machines"
  hosts: localhost
  connection: local
  gather_facts: yes

  vars:
    cluster_config_path: "{{ playbook_dir }}/../cluster_config.yml"
    scan_attempts: 3

  tasks:
    # 1단계: 클러스터 구성 파일 로드
    - name: "Load cluster configuration"
      ansible.builtin.include_vars:
        file: "{{ cluster_config_path }}"
        name: cluster_config

    # 2단계: 필요한 패키지 확인 및 설치
    - name: "Ensure required packages are installed"
      ansible.builtin.package:
        name:
          - nmap
          - sshpass
        state: present
      become: yes

    # 3단계: 주의 메시지 표시
    - name: "Display warning message"
      ansible.builtin.pause:
        prompt: |

          ========================================
          다른 머신들 초기화를 시작합니다
          ========================================

          주의사항:
          1. 네트워크에 새로운 장치가 연결되지 않도록 주의하세요
          2. 클러스터에 추가할 머신만 켜주세요
          3. 각 머신은 SSH 접속이 가능해야 합니다
          4. 기본 사용자 계정과 비밀번호를 알고 있어야 합니다

          준비가 완료되면 Enter를 눌러 계속 진행하세요...

    # 4단계: 초기 네트워크 스캔
    - name: "Perform initial network scan"
      ansible.builtin.shell: |
        nmap -sn {{ cluster_config.network_config.subnet }} | grep -E "Nmap scan report|Host is up" | grep "Nmap scan report" | awk '{print $5}' | sort
      register: initial_scan
      changed_when: false

    - name: "Display initial scan results"
      ansible.builtin.debug:
        msg: |
          초기 네트워크 스캔 완료
          발견된 호스트 수: {{ initial_scan.stdout_lines | length }}

    # 5단계: 이미 설정된 머신들의 호스트명 수집
    - name: "Collect configured machine names"
      ansible.builtin.set_fact:
        configured_names: "{{ cluster_config.machines | map(attribute='name') | list }}"

    # 6단계: 초기 스캔에서 이미 설정된 머신 확인
    - name: "Check which machines are already configured"
      ansible.builtin.shell: |
        if ping -c 1 -W 1 {{ item.name }} > /dev/null 2>&1; then
          echo "{{ item.name }}"
        fi
      loop: "{{ cluster_config.machines }}"
      register: configured_check
      changed_when: false
      failed_when: false

    - name: "Build list of already configured machines"
      ansible.builtin.set_fact:
        already_configured: "{{ configured_check.results | selectattr('stdout', 'defined') | selectattr('stdout', 'ne', '') | map(attribute='stdout') | list }}"

    - name: "Display already configured machines"
      ansible.builtin.debug:
        msg: |
          이미 설정된 머신들: {{ already_configured | join(', ') if already_configured | length > 0 else '없음' }}

    # 7단계: 남은 머신 리스트 생성
    - name: "Build remaining machines list"
      ansible.builtin.set_fact:
        remaining_machines: "{{ cluster_config.machines | rejectattr('name', 'in', already_configured) | list }}"

    - name: "Check if all machines are configured"
      ansible.builtin.debug:
        msg: "모든 머신이 이미 설정되었습니다!"
      when: remaining_machines | length == 0

    - name: "End playbook if all machines configured"
      ansible.builtin.meta: end_play
      when: remaining_machines | length == 0

    # 8단계: 머신 초기화 루프
    - name: "Initialize remaining machines"
      include_tasks: tasks/initialize_single_machine.yml
      loop: "{{ remaining_machines }}"
      loop_control:
        loop_var: target_machine
        index_var: machine_index

    # 9단계: 완료 메시지
    - name: "Display completion message"
      ansible.builtin.debug:
        msg: |

          ========================================
          모든 머신 초기화 완료
          ========================================
          클러스터의 모든 머신이 성공적으로 설정되었습니다.

          다음 단계:
          - 각 머신을 재부팅하여 설정을 완전히 적용하세요
          - 오케스트레이션 레이어 설정을 진행할 수 있습니다
